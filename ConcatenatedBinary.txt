#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define MOD 1000000007
class Solution {
public:
    string decimal2binary(int n){
        string str;
        while(n>0){
            if(n&1){   //Check if last bit is set or not
                str='1'+str; //Add '1' if last bit is set
            }
            else str='0'+str;  //Add '0' if last bit is not set
            n=n>>1;   //Divide by 2
        }
        return str;
    }
    int concatenatedBinary(int n) {
        string ans;
        for(int i=1;i<=n;i++)
        {  ans=ans + decimal2binary(i); }  //formed new string by concatenating all binary string
        int cnt=0,base=1;                   //number from 1 to n
        for(int i=ans.size()-1;i>=0;i--)
        {
            if(ans[i]=='1'){
                cnt=(cnt + base*1)%MOD; //If last bit is set increment the cnt
            }
            base=(base*2)%MOD;
        }
        return cnt%MOD; //Return ans
    }
};
int main()
{
    Solution s;
    cout<<s.concatenatedBinary(12);
}